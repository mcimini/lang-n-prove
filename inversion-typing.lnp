for each v in Value, Theorem Inversion-typing-_(v):
    let srule = ofType(v).rule[<:] inn
    let trule = align v.rule[|-] to srule where out = left inn
    forall*, (Main : typeOf (empty) trule.exp srule.right) ->
        exists*, AND(P in trule.premises): (P) endAND /\ AND(P in srule.premises): (P).
Proof.
Subtype_(0): induction on Main.
search.
_: apply Inversion-subtype-_(ofType(v)) to Subtype1. _: apply IH0 to Subtype0. search
