Theorem SubtypeA-transitive-double : 
 (forall*, (Main1: subtypeA t1 t2) -> (Main2: subtypeA t2 t3) -> (_: subtypeA t1 t3))
 /\
 (forall*, (Main1: subtypeA t1 t2) -> (Main2: subtypeA t2 t3) -> (_: subtypeA t1 t3)).
Proof.
PremSub0-0: mutual induction on Main1 Main2.
first:
    for each ty in Type:
        PremSub2-0: case Main2.
        for each i in ty.rule[<a].premisesIdx[<a]:
            if covariant(i, ty) then
                _: apply IH0 to PremSub0-_(i) PremSub2-_(i)
            else
                _: apply IH1 to PremSub2-_(i) PremSub0-_(i)
        endfor.
        search
    endfor
second:
    for each ty in Type:
        PremSub2-0: case Main1.
        for each i in ty.rule[<a].premisesIdx[<a]:
            if covariant(i, ty) then
                _: apply IH1 to PremSub2-_(i) PremSub0-_(i)
            else
                _: apply IH0 to PremSub0-_(i) PremSub2-_(i)
        endfor.
        search
    endfor
