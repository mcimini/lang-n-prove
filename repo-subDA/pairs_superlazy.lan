Top ::= (top ).
Subtyping S ::= (times Cov Cov).
Expression E ::= x | (pair E E) | (fst E) | (snd E).
Type T ::= (top ) | (times T T).
Value V ::= (pair E1 E2).
Error ::= .
Context C ::= [] | (fst C) | (snd C).

Gamma |- (pair E1 E2) : (times T1 T2) <== Gamma |- E1 : T1 /\ Gamma |- E2 : T2.
Gamma |- (fst E) : T1 <== Gamma |- E : (times T1 T2).
Gamma |- (snd E) : T2 <== Gamma |- E : (times T1 T2).
Gamma |a- (pair E1 E2) : (times T1 T2) <== Gamma |a- E1 : T1 /\ Gamma |a- E2 : T2.
Gamma |a- (fst E) : T1 <== Gamma |a- E : (times T1 T2).
Gamma |a- (snd E) : T2 <== Gamma |a- E : (times T1 T2).
(top ) <a (top ).
(times T1 T2) <a (times T1' T2') <== T1 <a T1' /\ T2 <a T2'.
(times T1 T2) <a (top ).
join (top ) T (top ).
join (times T1 T2) (times T3 T4) (times T5 T6) <== join T1 T3 T5 /\ join T2 T4 T6.
join (times T1 T2) T (top ).
meet (top ) (top ) (top ).
meet (top ) (times T1 T2) (times T1 T2).
meet (times T1 T2) (times T3 T4) (times T5 T6) <== meet T1 T3 T5 /\ meet T2 T4 T6.
meet (times T1 T2) (top ) (times T1 T2).
(fst (pair E1 E2)) --> E1.
(snd (pair E1 E2)) --> E2.
