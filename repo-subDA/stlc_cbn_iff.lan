Top ::= (top ).
Subtyping S ::= (arrow Contra Cov) | (bool ).
Expression E ::= x | (abs T (x)E) | (tt ) | (ff ) | (app E E) | (if E E E).
Type T ::= (top ) | (arrow T T) | (bool ).
Value V ::= (abs T1 R2) | (tt ) | (ff ).
Error ::= .
Context C ::= [] | (app C e) | (if C e e).

Gamma |- (abs T1 R) : (arrow T1 T2) <== Gamma, x : T1 |- R : T2.
Gamma |- (tt ) : (bool ).
Gamma |- (ff ) : (bool ).
Gamma |- (app E1 E2) : T2 <== Gamma |- E1 : (arrow T1 T2) /\ Gamma |- E2 : T1.
Gamma |- (if E1 E2 E3) : T <== Gamma |- E1 : (bool ) /\ Gamma |- E2 : T /\ Gamma |- E3 : T.
Gamma |a- (abs T1 R) : (arrow T1 T2) <== Gamma, x : T1 |a- R : T2.
Gamma |a- (tt ) : (bool ).
Gamma |a- (ff ) : (bool ).
Gamma |a- (app E1 E2) : T2 <== Gamma |a- E1 : (arrow T1 T2) /\ Gamma |a- E2 : T3 /\ T3 <a T1.
Gamma |a- (if E1 E2 E3) : T3 <== Gamma |a- E1 : (bool ) /\ Gamma |a- E2 : T1 /\ Gamma |a- E3 : T2 /\ join T1 T2 T3.
(top ) <a (top ).
(arrow T1 T2) <a (arrow T1' T2') <== T1' <a T1 /\ T2 <a T2'.
(arrow T1 T2) <a (top ).
(bool ) <a (bool ).
(bool ) <a (top ).
join (top ) T (top ).
join (arrow T1 T2) (arrow T3 T4) (arrow T5 T6) <== meet T1 T3 T5 /\ join T2 T4 T6.
join (arrow T1 T2) T (top ).
join (bool ) (bool ) (bool ).
join (bool ) T (top ).
meet (top ) (top ) (top ).
meet (top ) (arrow T1 T2) (arrow T1 T2).
meet (top ) (bool ) (bool ).
meet (arrow T1 T2) (arrow T3 T4) (arrow T5 T6) <== join T1 T3 T5 /\ meet T2 T4 T6.
meet (arrow T1 T2) (top ) (arrow T1 T2).
meet (bool ) (bool ) (bool ).
meet (bool ) (top ) (bool ).
(app (abs T R) E) --> R[E/x].
(if (tt ) E1 E2) --> E1.
(if (ff ) E1 E2) --> E2.
