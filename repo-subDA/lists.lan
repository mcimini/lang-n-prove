Top ::= (top ).
Subtyping S ::= (list Cov).
Expression E ::= x | (emptyList ) | (cons E E) | (head E) | (tail E) | (myError ).
Type T ::= (top ) | (list T).
Value V ::= (emptyList ) | (cons V1 V2).
Error ::= (myError ).
Context C ::= [] | (cons C e) | (cons v C) | (head C) | (tail C).

Gamma |- (emptyList ) : (list T).
Gamma |- (cons E1 E2) : (list T) <== Gamma |- E1 : T /\ Gamma |- E2 : (list T).
Gamma |- (head E) : T <== Gamma |- E : (list T).
Gamma |- (tail E) : (list T) <== Gamma |- E : (list T).
Gamma |- (myError ) : T.
Gamma |a- (emptyList ) : (list T).
Gamma |a- (cons E1 E2) : (list T3) <== Gamma |a- E1 : T1 /\ Gamma |a- E2 : (list T2) /\ join T1 T2 T3.
Gamma |a- (head E) : T <== Gamma |a- E : (list T).
Gamma |a- (tail E) : (list T) <== Gamma |a- E : (list T).
Gamma |a- (myError ) : T.
(top ) <a (top ).
(list T1) <a (list T1') <== T1 <a T1'.
(list T1) <a (top ).
join (top ) T (top ).
join (list T1) (list T3) (list T5) <== join T1 T3 T5.
join (list T1) T (top ).
meet (top ) (top ) (top ).
meet (top ) (list T1) (list T1).
meet (list T1) (list T3) (list T5) <== meet T1 T3 T5.
meet (list T1) (top ) (list T1).
(head (emptyList )) --> (myError ).
(head (cons E1 E2)) --> E1.
(tail (emptyList )) --> (myError ).
(tail (cons E1 E2)) --> E2.
